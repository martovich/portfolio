{"version":3,"sources":["modules/NavMenu.module.css","modules/Main.module.css","modules/Header.module.css","modules/Skills.module.css","modules/Projects.module.css","modules/Slogan.module.css","modules/Contacts.module.css","modules/Footer.module.css","components/NavMenu.js","components/Header.js","components/Main.js","components/Skills.js","components/Projects.js","components/Slogan.js","components/Contacts.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavMenu","className","styles","navMenu","href","link","Header","header","container","Main","main","greeating","photo","src","alt","Skills","skills","Projects","projects","Slogan","slogan","Contacts","contacts","Footer","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,MAAQ,sB,gBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,IAAM,sB,kBCA9FD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,+LCUZC,EARC,kBACZ,yBAAKC,UAAWC,IAAOC,SACnB,uBAAGC,KAAK,GAAGH,UAAWC,IAAOG,MAA7B,8CACA,uBAAGD,KAAK,GAAGH,UAAWC,IAAOG,MAA7B,kCACA,uBAAGD,KAAK,GAAGH,UAAWC,IAAOG,MAA7B,wCACA,uBAAGD,KAAK,GAAGH,UAAWC,IAAOG,MAA7B,sDCGOC,EAPA,kBACX,yBAAKL,UAAWC,IAAOK,QACnB,yBAAKN,UAAWC,IAAOM,WACnB,kBAAC,EAAD,S,gBCUGC,EAdF,kBACT,yBAAKR,UAAWC,IAAOQ,MACnB,yBAAKT,UAAWC,IAAOM,WACnB,yBAAKP,UAAWC,IAAOS,WACnB,uEACA,4FACA,sDAEJ,yBAAKV,UAAWC,IAAOU,OACnB,yBAAKC,IAAI,GAAGC,IAAI,S,gBCLjBC,EAJA,kBACX,yBAAKd,UAAWC,IAAOc,U,gBCKZC,EANE,WACb,OACI,yBAAKhB,UAAWC,IAAOgB,Y,gBCEhBC,EAJA,kBACX,yBAAKlB,UAAWC,IAAOkB,U,gBCGZC,EAJE,kBACb,yBAAKpB,UAAWC,IAAOoB,Y,iBCGZC,EAJA,kBACX,yBAAKtB,UAAWC,IAAOsB,UCmBZC,EAbH,kBACR,yBAAKxB,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPQyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.16f8ef3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenu\":\"NavMenu_navMenu__wOTCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2ubn7\",\"container\":\"Main_container__1o_ia\",\"greeating\":\"Main_greeating__3oict\",\"photo\":\"Main_photo__3M8-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2K9Zc\",\"container\":\"Header_container__3FhDR\",\"nav\":\"Header_nav__2DH_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"Skills_skills__3Zcq7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Projects_projects__2PU13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slogan\":\"Slogan_slogan__p3n0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__3vOn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3gEFC\"};","import React from 'react';\nimport styles from '../modules/NavMenu.module.css';\n\nconst NavMenu = () => (\n    <div className={styles.navMenu}>\n        <a href=\"\" className={styles.link}>Главная</a>\n        <a href=\"\" className={styles.link}>Скилы</a>\n        <a href=\"\" className={styles.link}>Работа</a>\n        <a href=\"\" className={styles.link}>Контакты</a>\n    </div>\n);\nexport default NavMenu;\n","import React from 'react';\nimport styles from '../modules/Header.module.css';\nimport NavMenu from \"./NavMenu\";\n\nconst Header = () => (\n    <div className={styles.header}>\n        <div className={styles.container}>\n            <NavMenu />\n        </div>\n    </div>\n);\nexport default Header;\n","import React from 'react';\nimport styles from '../modules/Main.module.css';\n\nconst Main = () => (\n    <div className={styles.main}>\n        <div className={styles.container}>\n            <div className={styles.greeating}>\n                <span>Привет!</span>\n                <span>Меня зовут...</span>\n                <span>Я Front-end...</span>\n            </div>\n            <div className={styles.photo}>\n                <img src=\"\" alt=\"\"/>\n            </div>\n        </div>\n    </div>\n);\nexport default Main;\n","import React from 'react';\nimport styles from \"../modules/Skills.module.css\";\n\nconst Skills = () => (\n    <div className={styles.skills}>\n    </div>\n);\nexport default Skills;\n","import React from 'react';\nimport styles from '../modules/Projects.module.css';\n\nconst Projects = () => {\n    return (\n        <div className={styles.projects}>\n        </div>\n    );\n};\nexport default Projects;\n","import React from 'react';\nimport styles from \"../modules/Slogan.module.css\";\n\nconst Slogan = () => (\n    <div className={styles.slogan}>\n    </div>\n);\nexport default Slogan;\n","import React from 'react';\nimport styles from \"../modules/Contacts.module.css\";\n\nconst Contacts = () => (\n    <div className={styles.contacts}>\n    </div>\n);\nexport default Contacts;\n","import React from 'react';\nimport styles from \"../modules/Footer.module.css\";\n\nconst Footer = () => (\n    <div className={styles.footer}>\n    </div>\n);\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Skills from \"./components/Skills\";\nimport Projects from \"./components/Projects\";\nimport Slogan from \"./components/Slogan\";\nimport Contacts from \"./components/Contacts\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => (\n    <div className='App'>\n        <div className='portfolio'>\n            <Header/>\n            <Main/>\n            <Skills/>\n            <Projects/>\n            <Slogan/>\n            <Contacts/>\n            <Footer/>\n        </div>\n    </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}